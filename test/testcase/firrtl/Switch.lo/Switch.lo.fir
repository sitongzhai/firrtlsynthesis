circuit Switch : @[:@2.0]
  module Switch : @[:@3.2]
    input clock : Clock @[:@4.4]
    input reset : UInt<1> @[:@5.4]
    input io_i0 : UInt<2> @[:@6.4]
    input io_i1 : UInt<1> @[:@6.4]
    output io_out : UInt<1> @[:@6.4]
  
    node _T_14 = eq(UInt<2>("h0"), io_i0) @[Conditional.scala 37:30:@10.4]
    node _T_17 = eq(UInt<2>("h1"), io_i0) @[Conditional.scala 37:30:@16.6]
    node inst_valid_num = UInt<5>("h2") @[Switch.scala 17:33:@12.6 Switch.scala 29:18:@39.4]
    node _T_19 = sub(inst_valid_num, UInt<5>("h1")) @[Switch.scala 24:60:@18.8]
    node _T_20 = asUInt(_T_19) @[Switch.scala 24:60:@19.8]
    node _T_21 = tail(_T_20, 1) @[Switch.scala 24:60:@20.8]
    node _T_23 = eq(UInt<2>("h2"), io_i0) @[Conditional.scala 37:30:@24.8]
    node _T_25 = add(inst_valid_num, UInt<5>("h1")) @[Switch.scala 25:60:@26.10]
    node _T_26 = tail(_T_25, 1) @[Switch.scala 25:60:@27.10]
    node _T_28 = eq(UInt<2>("h3"), io_i0) @[Conditional.scala 37:30:@31.10]
    node _T_30 = add(inst_valid_num, UInt<5>("h2")) @[Switch.scala 26:60:@33.12]
    node _T_31 = tail(_T_30, 1) @[Switch.scala 26:60:@34.12]
    node _GEN_0 = mux(_T_28, _T_31, UInt<5>("h0")) @[Conditional.scala 39:67:@32.10]
    node _GEN_1 = mux(_T_23, _T_26, _GEN_0) @[Conditional.scala 39:67:@25.8]
    node _GEN_2 = mux(_T_17, _T_21, _GEN_1) @[Conditional.scala 39:67:@17.6]
    node _GEN_3 = mux(_T_14, inst_valid_num, _GEN_2) @[Conditional.scala 40:58:@11.4]
    node inst_valid_num_nxt = _GEN_3 @[Switch.scala 15:37:@8.4 Switch.scala 21:22:@9.4 Switch.scala 23:42:@13.6 Switch.scala 24:42:@21.8 Switch.scala 25:42:@28.10 Switch.scala 26:42:@35.12]
    node inst_valid_num_d = UInt<5>("h1") @[Switch.scala 16:35:@37.4 Switch.scala 28:20:@38.4]
    io_out <= io_i1 @[Switch.scala 30:10:@40.4]
