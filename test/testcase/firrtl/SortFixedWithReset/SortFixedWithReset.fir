;buildInfoPackage: chisel3, version: 3.1.8, scalaVersion: 2.11.12, sbtVersion: 1.1.1, builtAtString: 2019-07-08 17:44:42.884, builtAtMillis: 1562607882884
circuit SortFixed :
  module SortFixed :
    input clock : Clock
    input reset : UInt<1>
    output io : {flip inputs : Fixed<16><<8>>[5], flip newInputs : UInt<1>, outputs : Fixed<16><<8>>[5], sortDone : UInt<1>}

    wire initValue : Fixed<64><<16>>[5] @[SortFixed.scala 16:23]
    initValue[0] <= asFixedPoint(UInt<64>("h00"), 16) @[SortFixed.scala 18:18]
    initValue[1] <= asFixedPoint(UInt<64>("h00"), 16) @[SortFixed.scala 18:18]
    initValue[2] <= asFixedPoint(UInt<64>("h00"), 16) @[SortFixed.scala 18:18]
    initValue[3] <= asFixedPoint(UInt<64>("h00"), 16) @[SortFixed.scala 18:18]
    initValue[4] <= asFixedPoint(UInt<64>("h00"), 16) @[SortFixed.scala 18:18]
    reg orderedRegs : Fixed<64><<16>>[5], clock with : (reset => (reset, initValue)) @[SortFixed.scala 20:28]
    reg busy : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[SortFixed.scala 21:21]
    reg sortCounter : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[SortFixed.scala 22:28]
    reg isEvenCycle : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[SortFixed.scala 23:28]
    when io.newInputs : @[SortFixed.scala 25:23]
      orderedRegs[0] <= io.inputs[0] @[SortFixed.scala 26:17]
      orderedRegs[1] <= io.inputs[1] @[SortFixed.scala 26:17]
      orderedRegs[2] <= io.inputs[2] @[SortFixed.scala 26:17]
      orderedRegs[3] <= io.inputs[3] @[SortFixed.scala 26:17]
      orderedRegs[4] <= io.inputs[4] @[SortFixed.scala 26:17]
      ;orderedRegs <= io.inputs @[SortFixed.scala]
      busy <= UInt<1>("h01") @[SortFixed.scala 27:10]
      sortCounter <= UInt<3>("h00") @[SortFixed.scala 28:17]
      isEvenCycle <= UInt<1>("h00") @[SortFixed.scala 29:17]
      skip @[SortFixed.scala 25:23]
    else : @[SortFixed.scala 30:16]
      when busy : @[SortFixed.scala 31:17]
        node _T_107 = eq(isEvenCycle, UInt<1>("h00")) @[SortFixed.scala 32:35]
        isEvenCycle <= _T_107 @[SortFixed.scala 32:19]
        node _T_109 = add(sortCounter, UInt<1>("h01")) @[SortFixed.scala 33:34]
        node _T_110 = tail(_T_109, 1) @[SortFixed.scala 33:34]
        sortCounter <= _T_110 @[SortFixed.scala 33:19]
        node _T_112 = gt(sortCounter, UInt<3>("h05")) @[SortFixed.scala 34:25]
        when _T_112 : @[SortFixed.scala 34:37]
          busy <= UInt<1>("h00") @[SortFixed.scala 35:14]
          skip @[SortFixed.scala 34:37]
        when isEvenCycle : @[SortFixed.scala 37:26]
          node _T_114 = gt(orderedRegs[0], orderedRegs[1]) @[SortFixed.scala 38:30]
          when _T_114 : @[SortFixed.scala 38:48]
            orderedRegs[0] <= orderedRegs[1] @[SortFixed.scala 39:26]
            orderedRegs[1] <= orderedRegs[0] @[SortFixed.scala 40:26]
            skip @[SortFixed.scala 38:48]
          node _T_115 = gt(orderedRegs[2], orderedRegs[3]) @[SortFixed.scala 42:30]
          when _T_115 : @[SortFixed.scala 42:48]
            orderedRegs[2] <= orderedRegs[3] @[SortFixed.scala 43:26]
            orderedRegs[3] <= orderedRegs[2] @[SortFixed.scala 44:26]
            skip @[SortFixed.scala 42:48]
          skip @[SortFixed.scala 37:26]
        else : @[SortFixed.scala 46:20]
          node _T_116 = gt(orderedRegs[1], orderedRegs[2]) @[SortFixed.scala 47:30]
          when _T_116 : @[SortFixed.scala 47:48]
            orderedRegs[1] <= orderedRegs[2] @[SortFixed.scala 48:26]
            orderedRegs[2] <= orderedRegs[1] @[SortFixed.scala 49:26]
            skip @[SortFixed.scala 47:48]
          node _T_117 = gt(orderedRegs[3], orderedRegs[4]) @[SortFixed.scala 51:30]
          when _T_117 : @[SortFixed.scala 51:48]
            orderedRegs[3] <= orderedRegs[4] @[SortFixed.scala 52:26]
            orderedRegs[4] <= orderedRegs[3] @[SortFixed.scala 53:26]
            skip @[SortFixed.scala 51:48]
          skip @[SortFixed.scala 46:20]
        skip @[SortFixed.scala 31:17]
      skip @[SortFixed.scala 30:16]
    node _T_119 = eq(busy, UInt<1>("h00")) @[SortFixed.scala 58:24]
    io.sortDone <= _T_119 @[SortFixed.scala 58:15]
    io.outputs[0] <= orderedRegs[0] @[SortFixed.scala 59:14]
    io.outputs[1] <= orderedRegs[1] @[SortFixed.scala 59:14]
    io.outputs[2] <= orderedRegs[2] @[SortFixed.scala 59:14]
    io.outputs[3] <= orderedRegs[3] @[SortFixed.scala 59:14]
    io.outputs[4] <= orderedRegs[4] @[SortFixed.scala 59:14]